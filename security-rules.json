{
  "rules": {

    "posts": {
      // anyone can view posts
      ".read": true,

      "$id": {
        // auth can't be null to make/edit post
        // if the post exists, auth.uid must match creatorUID
        ".write": "(auth != null && !data.exists()) || data.child('creatorUID').val() === auth.uid",

        // We want to make sure that all 4 fields are present before saving a new post
        ".validate": "newData.hasChildren(['teamA','teamB','creator','creatorUID'])",

        // title must be a string with length>0
        "title": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "url": {
          ".validate": "newData.isString()"
        },
        "creator": {
          ".validate": "newData.isString()"
        },
        "creatorUID": {
          ".validate": "auth.uid === newData.val() && root.child('profile/'+newData.val()).exists()"
        }
      }
    },

    "commentsA": {
      ".read": true,

      "$post_id": {
        // make sure the post we're adding comments to exists
        ".validate": "root.child('posts/'+$post_id).exists()",

        "$comment_id": {
          // same write rules as for Post
          ".write": "(auth != null && !data.exists()) || data.child('creatorUID').val() === auth.uid",
          ".validate": "!data.exists() || data.child('creatorUID').val() === auth.uid"
        }
      }
    },
       "commentsB": {
      ".read": true,

      "$post_id": {
        // make sure the post we're adding comments to exists
        ".validate": "root.child('posts/'+$post_id).exists()",

        "$comment_id": {
          // same write rules as for Post
          ".write": "(auth != null && !data.exists()) || data.child('creatorUID').val() === auth.uid",
          ".validate": "!data.exists() || data.child('creatorUID').val() === auth.uid"
        }
      }
    },

    "profile": {
      ".read": true,

      "$uid": {
        ".write": "!data.exists() && auth.uid === $uid"
      }
    },

    "user_posts": {
      ".read": true,

      "$uid": {
        // only the user can write here
        ".write": "auth.uid === $uid"
      }
    },

    // Don't let users post to other fields
    "$other": { ".validate": false }

  }
}